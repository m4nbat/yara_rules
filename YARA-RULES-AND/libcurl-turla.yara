import "pe"
// testing rule
private rule libcurl_string {
    strings:
    $a = "CURL_SSL_BACKEND" 
    condition: 
    uint16be(0)==0x4d5a 
    and $a
}
rule TTP_lib_libcurl_strings {
    meta:
        note = "Looking for PEs contain libcurl stuff (supposing that they use the library) that are NOT curl.exe or libcurl.dll files."
    strings: 
        $a01 = "# Fatal libcurl error"
        $a02 = "# Netscape HTTP Cookie File"
        $a03 = "# https://curl.haxx.se/docs/http-cookies.html"
        $a04 = "# This file was generated by libcurl! Edit at your own risk."
        $a05 = "CURL_SSL_BACKEND"
        $a06 = "CURLOPT_SSLVERSION"
        $a07 = "CURL_SSLVERSION"
        $a08 = "CURL_SSL_BACKEND"
        $a09 = "CURLOPT_RESOLVE"
        //exclusions for curl.exe below
        $z01 = "curl: unknown --write-out variable: '%s'"
        $z02 = "curl: Saved to filename '%s'"
    condition:
        filesize < 3MB
        and uint16be(0) == 0x4d5a // match only executables
        and pe.number_of_signatures == 0
        and any of ($a*)
        and not any of ($z*)
}
//stuff just in curl.exe

//curl: unknown --write-out variable: '%s'
//curl: (%d) [globbing] %s
//curl: Saved to filename '%s'
//--_curl_--
//curl: try 'curl --help' for more information


//stuff in both libcurl and malware

/*
# Fatal libcurl error
# Netscape HTTP Cookie File
# https://curl.haxx.se/docs/http-cookies.html
# This file was generated by libcurl! Edit at your own risk.
CURL_SSL_BACKEND
CURLOPT_SSLVERSION
CURL_SSLVERSION
CURL_SSL_BACKEND
CURLOPT_RESOLVE
libcurl/7.56.0-DEV
*/